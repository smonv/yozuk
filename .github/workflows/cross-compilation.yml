name: Cross-Compilation

on:
  push:
    paths:
      - '**.toml'
      - '**.rs'
      - '**.yml'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:    
    strategy:
      matrix:
        toolchain: [aarch64-unknown-linux-gnu, armv7-linux-androideabi, wasm32-unknown-unknown, wasm32-wasi]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      continue-on-error: true
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.toolchain }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r23b
      if: ${{ matrix.toolchain == 'armv7-linux-androideabi' }}
    - name: Add NDK Path
      run: echo ${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin >> $GITHUB_PATH
      if: ${{ matrix.toolchain == 'armv7-linux-androideabi' }}
    - name: Install GCC
      run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      if: ${{ matrix.toolchain == 'aarch64-unknown-linux-gnu' }}
    - name: Install toolchain
      run: rustup target add ${{ matrix.toolchain }}
    - name: Build
      run: cargo build -p yozuk --target=${{ matrix.toolchain }}
      if: ${{ startsWith(matrix.toolchain, 'wasm32-') }}
    - name: Build
      run: cargo build -p yozuk --target=${{ matrix.toolchain }} --all-features
      if: ${{ !startsWith(matrix.toolchain, 'wasm32-') }}
      env:
        AR_armv7-linux-androideabi: llvm-ar

  build-macos:
    strategy:
      matrix:
        toolchain: [aarch64-apple-ios]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      continue-on-error: true
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ matrix.toolchain }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install toolchain
      run: rustup target add ${{ matrix.toolchain }}
    - name: Build
      run: cargo build -p yozuk --target=${{ matrix.toolchain }} --all-features
