on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

env:
  CARGO_TERM_COLOR: always
    
jobs:
  release-linux:
    name: Upload Release Asset (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: rui314/setup-mold@v1
      - name: Install apt packages
        run: sudo apt-get install -y libseccomp-dev
      - name: Build project
        run: cargo b --bin zuk --release
      - name: Make archive
        run: tar -C target/release -Jcvf zuk-x86_64-unknown-linux-gnu.tar.xz zuk
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*

  release-windows:
    name: Upload Release Asset (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo b --bin zuk --release
      - name: Make archive
        run: tar -C target/release -acf zuk-x86_64-pc-windows-msvc.zip zuk.exe
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} zuk-x86_64-pc-windows-msvc.zip

  release-macos:
    name: Upload Release Asset (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo b --bin zuk --release
      - name: Make archive
        run: tar -C target/release -Jcvf zuk-x86_64-apple-darwin.tar.xz zuk
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*
    
  release-wasm:
    name: Upload Release Asset (WASM)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-wasm-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install wasm-pack
        run: sudo npm install -g wasm-pack
      - name: Make WASM archive
        run: node script/wasm-pack.js
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*

  release-cross:
    strategy:
      matrix:
        toolchain: [armv7-unknown-linux-gnueabihf, aarch64-unknown-linux-gnu, aarch64-linux-android]
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.toolchain }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
        continue-on-error: true
      - name: Build project
        run: cross build -p zuk --release --target ${{ matrix.toolchain }}
      - name: Make archive
        run: tar -C target/${{ matrix.toolchain }}/release -Jcvf zuk-${{ matrix.toolchain }}.tar.xz zuk
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.tar.*