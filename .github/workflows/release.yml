on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

env:
  CARGO_TERM_COLOR: always
    
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    name: Upload Release Asset
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set Env
        run: node -p "'platform=' + process.argv[1].toLowerCase()" ${{ runner.os }}-${{ runner.arch }} >> $GITHUB_ENV
        if: ${{ matrix.os != 'windows-latest' }}
      - name: Set Env
        run: node -p "'platform=' + process.argv[1].toLowerCase()" ${{ runner.os }}-${{ runner.arch }} >> $env:GITHUB_ENV
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Build project
        run: cargo b --bin zuk --release
      - name: Make archive
        run: tar -C target/release -Jcvf zuk-${{ env.platform }}.tar.xz zuk
        if: ${{ matrix.os != 'windows-latest' }}
      - name: Make archive
        run: tar -C target/release -acf zuk-${{ env.platform }}.zip zuk.exe
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --generate-notes
        continue-on-error: true
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} *.xz
        if: ${{ matrix.os != 'windows-latest' }}
      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} zuk-${{ env.platform }}.zip
        if: ${{ matrix.os == 'windows-latest' }}